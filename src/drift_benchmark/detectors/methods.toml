# Methods definitions for drift detection
# Each method can have multiple variants

[methods.kolmogorov_smirnov]
    name            = "Kolmogorov-Smirnov Test"
    description     = "Non-parametric test that quantifies the distance between empirical distribution functions of two samples."
    drift_types     = ["covariate"]
    family          = "statistical-test"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = false
    references      = ["https://doi.org/10.2307/2280095", "Massey Jr (1951)"]

    [methods.kolmogorov_smirnov.variants.ks_batch]
        name            = "Batch Kolmogorov-Smirnov"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

    [methods.kolmogorov_smirnov.variants.ks_online]
        name            = "Incremental Kolmogorov-Smirnov"
        execution_mode  = "streaming"
        hyperparameters = ["threshold", "window_size"]
        references      = ["https://doi.org/10.1145/2939672.2939836", "dos Reis et al. (2016)"]

[methods.cramer_von_mises]
    name            = "Cramér-von Mises Test"
    description     = "Non-parametric test that determines whether a sample comes from a specified distribution."
    drift_types     = ["covariate"]
    family          = "statistical-test"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = false
    references      = ["https://doi.org/10.1080/03461238.1928.10416862", "Cramér (1902)"]

    [methods.cramer_von_mises.variants.cvm_batch]
        name            = "Batch Cramér-von Mises"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

    [methods.cramer_von_mises.variants.cvm_online]
        name            = "Online Cramér-von Mises"
        execution_mode  = "streaming"
        hyperparameters = ["threshold", "window_size"]
        references      = []

[methods.anderson_darling]
    name            = "Anderson-Darling Test"
    description     = "Statistical test that detects whether a sample comes from a specified distribution, with increased sensitivity in the tails."
    drift_types     = ["covariate"]
    family          = "statistical-test"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = false
    references      = ["https://doi.org/10.2307/2288805", "Scholz and Stephens (1987)"]

    [methods.anderson_darling.variants.ad_batch]
        name            = "Anderson-Darling Test"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

[methods.mann_whitney]
    name            = "Mann-Whitney U-Test"
    description     = "Non-parametric test to determine whether two independent samples come from the same distribution."
    drift_types     = ["covariate"]
    family          = "statistical-test"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = false
    references      = ["https://doi.org/10.1214/aoms/1177730491", "Mann and Whitney (1947)"]

    [methods.mann_whitney.variants.mw_batch]
        name            = "Mann-Whitney U-Test"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

[methods.kuiper]
    name            = "Kuiper Test"
    description     = "Non-parametric test similar to Kolmogorov-Smirnov but more sensitive to differences in the tails of distributions."
    drift_types     = ["covariate"]
    family          = "statistical-test"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = false
    references      = ["https://doi.org/10.1016/S1385-7258(60)50006-0", "Kuiper (1960)"]

    [methods.kuiper.variants.kuiper_batch]
        name            = "Batch Kuiper Test"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

[methods.baumgartner_weiss_schindler]
    name            = "Baumgartner Weiss Schindler Test"
    description     = "Non-parametric test for equality of multivariate distributions."
    drift_types     = ["covariate"]
    family          = "statistical-test"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = false
    references      = ["https://doi.org/10.2307/2533862", "Baumgartner et al. (1998)"]

    [methods.baumgartner_weiss_schindler.variants.bws_batch]
        name            = "Batch Baumgartner Weiss Schindler Test"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

[methods.t_test]
    name            = "T-Test"
    description     = "Parametric test that determines if there is a significant difference between the means of two groups."
    drift_types     = ["covariate"]
    family          = "statistical-test"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Student%27s_t-test"]

    [methods.t_test.variants.ttest_batch]
        name            = "Batch T-Test"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

[methods.welch_t_test]
    name            = "Welch's T-Test"
    description     = "Adaptation of the t-test for samples with unequal variances."
    drift_types     = ["covariate"]
    family          = "statistical-test"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = false
    references      = ["https://doi.org/10.2307/2332510", "Welch (1947)"]

    [methods.welch_t_test.variants.welch_batch]
        name            = "Batch Welch's T-Test"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

[methods.epps_singleton]
    name            = "EPPS-Singleton Test"
    description     = "Test for equality of distributions that can be more powerful than Kolmogorov-Smirnov for certain distributions."
    drift_types     = ["covariate"]
    family          = "statistical-test"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = false
    references      = ["https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.epps_singleton_2samp.html"]

    [methods.epps_singleton.variants.epps_batch]
        name            = "Batch EPPS-Singleton Test"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

[methods.chi_square]
    name            = "Chi-square Test"
    description     = "Statistical test that determines whether there is a significant difference between the expected and observed frequencies in one or more categories."
    drift_types     = ["covariate"]
    family          = "statistical-test"
    data_dimension  = "univariate"
    data_types      = ["categorical"]
    requires_labels = false
    references      = ["https://doi.org/10.1080/01621459.1900.10477909", "Pearson (1900)"]

    [methods.chi_square.variants.chi_batch]
        name            = "Batch Chi-square Test"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

    [methods.chi_square.variants.chi_evidently]
        name            = "Evidently Chi-square Test"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

[methods.jensen_shannon_divergence]
    name            = "Jensen-Shannon Divergence"
    description     = "Method for measuring the similarity between two probability distributions based on the Kullback-Leibler divergence."
    drift_types     = ["covariate"]
    family          = "distance-based"
    data_dimension  = "univariate"
    data_types      = ["continuous", "categorical"]
    requires_labels = false
    references      = ["https://doi.org/10.1109/18.61115", "Lin (1991)"]

    [methods.jensen_shannon_divergence.variants.js_batch]
        name            = "Batch Jensen-Shannon Divergence"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

    [methods.jensen_shannon_divergence.variants.js_evidently]
        name            = "Evidently Jensen-Shannon Divergence"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

[methods.kullback_leibler_divergence]
    name            = "Kullback-Leibler Divergence"
    description     = "Measure of how one probability distribution diverges from a second, expected probability distribution."
    drift_types     = ["covariate"]
    family          = "distance-based"
    data_dimension  = "univariate"
    data_types      = ["continuous", "categorical"]
    requires_labels = false
    references      = ["https://doi.org/10.1214/aoms/1177729694", "Kullback and Leibler (1951)"]

    [methods.kullback_leibler_divergence.variants.kl_batch]
        name            = "Batch Kullback-Leibler Divergence"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

    [methods.kullback_leibler_divergence.variants.kl_evidently]
        name            = "Evidently Kullback-Leibler Divergence"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []

[methods.all_features_drift]
    name            = "All Features Value Drift"
    description     = "Comprehensive drift detection across all features in the dataset using statistical tests."
    drift_types     = ["covariate"]
    family          = "statistical-test"
    data_dimension  = "multivariate"
    data_types      = ["continuous", "categorical"]
    requires_labels = false
    references      = []

    [methods.all_features_drift.variants.all_features_batch]
        name            = "Batch All Features Drift"
        execution_mode  = "batch"
        hyperparameters = ["threshold", "stattest"]
        references      = []

    [methods.all_features_drift.variants.all_features_evidently]
        name            = "Evidently All Features Drift"
        execution_mode  = "batch"
        hyperparameters = ["threshold", "stattest"]
        references      = []

[methods.drift_detection_method]
    name            = "Drift Detection Method (DDM)"
    description     = "Monitors classification error rate to detect concept drift in streams."
    drift_types     = ["concept"]
    family          = "statistical-process-control"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = true
    references      = ["https://doi.org/10.1007/978-3-540-28645-5_29", "Gama et al. (2004)"]

    [methods.drift_detection_method.variants.ddm_standard]
        name            = "Standard DDM"
        execution_mode  = "streaming"
        hyperparameters = ["warning_level", "drift_level"]
        references      = []

[methods.early_drift_detection_method]
    name = "Early Drift Detection Method (EDDM)"
    description = "Extension of DDM that detects gradual concept drift earlier."
    drift_types = ["concept"]
    family = "statistical-process-control"
    data_dimension = "univariate"
    data_types = ["continuous"]
    requires_labels = true
    references = [
        "https://www.researchgate.net/publication/245999704_Early_Drift_Detection_Method",
        "Baena-Garcıa et al. (2006)",
    ]

    [methods.early_drift_detection_method.variants.eddm_standard]
        name            = "Standard EDDM"
        execution_mode  = "streaming"
        hyperparameters = ["warning_level", "drift_level"]
        references      = []

[methods.page_hinkley]
    name            = "Page-Hinkley Test"
    description     = "Sequential analysis technique for detecting changes in the average of a Gaussian signal."
    drift_types     = ["concept"]
    family          = "change-detection"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = true
    references      = ["https://doi.org/10.2307/2333009", "Page (1954)"]

    [methods.page_hinkley.variants.ph_standard]
        name            = "Standard Page-Hinkley"
        execution_mode  = "streaming"
        hyperparameters = ["delta", "lambda", "alpha"]
        references      = []

[methods.adaptive_windowing]
    name            = "Adaptive Windowing (ADWIN)"
    description     = "Uses adaptive window sizes to detect changes in data streams."
    drift_types     = ["concept", "covariate"]
    family          = "window-based"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = false
    references      = ["https://doi.org/10.1137/1.9781611972771.42", "Bifet and Gavalda (2007)"]

    [methods.adaptive_windowing.variants.adwin_standard]
        name            = "Standard ADWIN"
        execution_mode  = "streaming"
        hyperparameters = ["delta"]
        references      = []

[methods.cusum]
    name            = "Cumulative Sum Control Chart (CUSUM)"
    description     = "Sequential analysis technique for monitoring change detection using cumulative sum."
    drift_types     = ["concept"]
    family          = "change-detection"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = true
    references      = ["https://doi.org/10.2307/2333009", "Page (1954)"]

    [methods.cusum.variants.cusum_standard]
        name            = "Standard CUSUM"
        execution_mode  = "streaming"
        hyperparameters = ["threshold", "drift_threshold"]
        references      = []

[methods.geometric_moving_average]
    name            = "Geometric Moving Average"
    description     = "Control chart that monitors the geometric weighted moving average of a process."
    drift_types     = ["concept"]
    family          = "change-detection"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = true
    references      = ["https://doi.org/10.2307/1266443", "Roberts (1959)"]

    [methods.geometric_moving_average.variants.gma_standard]
        name            = "Standard Geometric Moving Average"
        execution_mode  = "streaming"
        hyperparameters = ["lambda", "threshold"]
        references      = []

[methods.exponential_cumulative_drift]
    name            = "Exponential Cumulative Drift Detection"
    description     = "Extends CUSUM with exponential weighting for more adaptive drift detection."
    drift_types     = ["concept"]
    family          = "statistical-process-control"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = true
    references      = ["https://doi.org/10.1016/j.patrec.2011.08.019", "Ross et al. (2012)"]

    [methods.exponential_cumulative_drift.variants.ecdd_standard]
        name            = "Standard Exponential Cumulative Drift Detection"
        execution_mode  = "streaming"
        hyperparameters = ["lambda", "threshold"]
        references      = []

[methods.ewma_concept]
    name            = "EWMA Concept Drift Detection Warning"
    description     = "Uses exponentially weighted moving average charts with warning levels for drift detection."
    drift_types     = ["concept"]
    family          = "statistical-process-control"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = true
    references      = ["https://doi.org/10.1016/j.patrec.2011.08.019", "Ross et al. (2012)"]

    [methods.ewma_concept.variants.ewma_standard]
        name            = "Standard EWMA Concept Drift Detection"
        execution_mode  = "streaming"
        hyperparameters = ["lambda", "warning_threshold", "drift_threshold"]
        references      = []

[methods.hoeffding_drift_detection_test_a]
    name            = "Hoeffding's Drift Detection Method Test-A"
    description     = "Variation of drift detection method using Hoeffding's inequality (Test A variant)."
    drift_types     = ["concept"]
    family          = "statistical-process-control"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = true
    references      = ["https://doi.org/10.1109/TKDE.2014.2345382", "Frias-Blanco et al. (2014)"]

    [methods.hoeffding_drift_detection_test_a.variants.hddm_a_standard]
        name            = "Standard Hoeffding's Drift Detection Method Test-A"
        execution_mode  = "streaming"
        hyperparameters = ["delta"]
        references      = []

[methods.hoeffding_drift_detection_test_w]
    name            = "Hoeffding's Drift Detection Method Test-W"
    description     = "Variation of drift detection method using Hoeffding's inequality (Test W variant)."
    drift_types     = ["concept"]
    family          = "statistical-process-control"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = true
    references      = ["https://doi.org/10.1109/TKDE.2014.2345382", "Frias-Blanco et al. (2014)"]

    [methods.hoeffding_drift_detection_test_w.variants.hddm_w_standard]
        name            = "Standard Hoeffding's Drift Detection Method Test-W"
        execution_mode  = "streaming"
        hyperparameters = ["delta"]
        references      = []

[methods.kswin]
    name            = "Kolmogorov-Smirnov Windowing (KSWIN)"
    description     = "Kolmogorov-Smirnov Windowing method for drift detection in data streams."
    drift_types     = ["concept"]
    family          = "window-based"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = false
    references      = ["https://doi.org/10.1016/j.neucom.2019.11.111", "Raab et al. (2020)"]

    [methods.kswin.variants.kswin_standard]
        name            = "Standard KSWIN"
        execution_mode  = "streaming"
        hyperparameters = ["alpha", "window_size"]
        references      = []


[methods.wasserstein_distance]
    name            = "Wasserstein Distance"
    description     = "The Wasserstein distance measures the minimum cost to transform one distribution into another."
    drift_types     = ["covariate"]
    family          = "distance-based"
    data_dimension  = "univariate"
    data_types      = ["continuous"]
    requires_labels = false
    references      = ["https://doi.org/10.1007/s10208-011-9093-5", "Wasserstein (1969)"]

    [methods.wasserstein_distance.variants.wasserstein_batch]
        name            = "Batch Wasserstein Distance"
        execution_mode  = "batch"
        hyperparameters = ["threshold"]
        references      = []


[methods.periodic_trigger]
    name            = "Periodic Trigger Detector"
    description     = "Detector that triggers drift detection at regular intervals for testing purposes."
    drift_types     = ["concept", "covariate", "prior"]
    family          = "statistical-test"
    data_dimension  = "univariate"
    data_types      = ["continuous", "categorical"]
    requires_labels = false
    references      = []

    [methods.periodic_trigger.variants.periodic_trigger_standard]
        name            = "Standard Periodic Trigger Detector"
        execution_mode  = "streaming"
        hyperparameters = ["interval"]
        references      = []
