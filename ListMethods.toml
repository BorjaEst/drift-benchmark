[[detector]]
    name = "Kolmogorov-Smirnov Test"
    description = "Non-parametric test that quantifies the distance between empirical distribution functions of two samples."
    drift_types = ["DATA_DRIFT"]
    execution_mode = "BATCH"
    family = "STATISTICAL_TEST"
    data_dimension = "UNIVARIATE"
    data_types = ["CONTINUOUS"]
    requires_labels = false
    references = [
        "https://en.wikipedia.org/wiki/Kolmogorov%E2%80%93Smirnov_test",
    ]
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name = "Online Kolmogorov-Smirnov"
    description = "Streaming version of the Kolmogorov-Smirnov test for online drift detection."
    drift_types = ["DATA_DRIFT"]
    execution_mode = "STREAMING"
    family = "STATISTICAL_TEST"
    data_dimension = "UNIVARIATE"
    data_types = ["CONTINUOUS"]
    requires_labels = false
    references = [
        "https://en.wikipedia.org/wiki/Kolmogorov%E2%80%93Smirnov_test",
    ]
    hyperparameters = { threshold = 0.05, window_size = 100 }

[[detector]]
    name = "Cramér-von Mises Test"
    description = "Non-parametric test that determines whether a sample comes from a specified distribution."
    drift_types = ["DATA_DRIFT"]
    execution_mode = "BATCH"
    family = "STATISTICAL_TEST"
    data_dimension = "UNIVARIATE"
    data_types = ["CONTINUOUS"]
    requires_labels = false
    references = [
        "https://en.wikipedia.org/wiki/Cram%C3%A9r%E2%80%93von_Mises_criterion",
    ]
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name = "Online Cramér-von Mises Test"
    description = "Streaming version of the Cramér-von Mises test for online drift detection."
    drift_types = ["DATA_DRIFT"]
    execution_mode = "STREAMING"
    family = "STATISTICAL_TEST"
    data_dimension = "UNIVARIATE"
    data_types = ["CONTINUOUS"]
    requires_labels = false
    references = [
        "https://en.wikipedia.org/wiki/Cram%C3%A9r%E2%80%93von_Mises_criterion",
    ]
    hyperparameters = { threshold = 0.05, window_size = 100 }

[[detector]]
    name            = "Anderson-Darling Test"
    description     = "Statistical test that detects whether a sample comes from a specified distribution, with increased sensitivity in the tails."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "STATISTICAL_TEST"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Anderson%E2%80%93Darling_test"]
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Mann-Whitney U-Test"
    description     = "Non-parametric test to determine whether two independent samples come from the same distribution."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "STATISTICAL_TEST"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U_test"]
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Kuiper Test"
    description     = "Non-parametric test similar to Kolmogorov-Smirnov but more sensitive to differences in the tails of distributions."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "STATISTICAL_TEST"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Kuiper%27s_test"]
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Baumgartner Weiss Schindler Test"
    description     = "Non-parametric test for equality of multivariate distributions."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "STATISTICAL_TEST"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = false
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "T-Test"
    description     = "Parametric test that determines if there is a significant difference between the means of two groups."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "STATISTICAL_TEST"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Student%27s_t-test"]
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Welch's T-Test"
    description     = "Adaptation of the t-test for samples with unequal variances."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "STATISTICAL_TEST"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Welch%27s_t-test"]
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "EPPS-Singleton Test"
    description     = "Test for equality of distributions that can be more powerful than Kolmogorov-Smirnov for certain distributions."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "STATISTICAL_TEST"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = false
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Chi-square Test"
    description     = "Statistical test that determines whether there is a significant difference between observed and expected frequencies."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "STATISTICAL_TEST"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CATEGORICAL"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Chi-squared_test"]
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Fisher Exact Test"
    description     = "Exact test for categorical data analysis when sample sizes are small."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "STATISTICAL_TEST"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CATEGORICAL"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Fisher%27s_exact_test"]
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Online Fisher Exact Test"
    description     = "Streaming version of Fisher's exact test for online drift detection."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_TEST"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CATEGORICAL"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Fisher%27s_exact_test"]
    hyperparameters = { threshold = 0.05, window_size = 100 }

[[detector]]
    name            = "G-Test"
    description     = "Log-likelihood ratio test that compares observed frequencies to expected frequencies."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "STATISTICAL_TEST"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CATEGORICAL"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/G-test"]
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Z-Test"
    description     = "Statistical test used to determine whether two population means are different when variances are known."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "STATISTICAL_TEST"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CATEGORICAL"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Z-test"]
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Maximum Mean Discrepancy"
    description     = "Kernel-based method that measures the distance between distributions in a reproducing kernel Hilbert space."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "DISTANCE_BASED"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    references      = ["https://jmlr.csail.mit.edu/papers/v13/gretton12a.html"]
    hyperparameters = { kernel = "rbf", gamma = "auto", threshold = 0.05 }

[[detector]]
    name            = "Online Maximum Mean Discrepancy"
    description     = "Streaming version of MMD for online drift detection."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "DISTANCE_BASED"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    references      = ["https://jmlr.csail.mit.edu/papers/v13/gretton12a.html"]
    hyperparameters = { kernel = "rbf", gamma = "auto", threshold = 0.05, window_size = 100 }

[[detector]]
    name            = "Empirical Maximum Mean Discrepancy"
    description     = "Empirical estimation of MMD for practical drift detection."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "DISTANCE_BASED"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    hyperparameters = { kernel = "rbf", gamma = "auto", threshold = 0.05 }

[[detector]]
    name            = "Wasserstein Distance"
    description     = "Metric that measures the distance between probability distributions, also known as Earth Mover's Distance."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "DISTANCE_BASED"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Wasserstein_metric"]
    hyperparameters = { threshold = 0.1 }

[[detector]]
    name            = "Energy Distance"
    description     = "Distance between distributions based on statistical energy, sensitive to any type of distributional difference."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "DISTANCE_BASED"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Energy_distance"]
    hyperparameters = { threshold = 0.1 }

[[detector]]
    name            = "Hellinger Distance"
    description     = "Measure of similarity between two probability distributions, related to the Bhattacharyya distance."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "DISTANCE_BASED"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Hellinger_distance"]
    hyperparameters = { threshold = 0.1 }

[[detector]]
    name            = "Bhattacharyya Distance"
    description     = "Measure of similarity between two probability distributions, related to the Hellinger distance."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "DISTANCE_BASED"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    references      = ["https://en.wikipedia.org/wiki/Bhattacharyya_distance"]
    hyperparameters = { threshold = 0.1 }

[[detector]]
    name = "Total Variation Distance"
    description = "Maximum difference between the probabilities assigned by two distributions."
    drift_types = ["DATA_DRIFT"]
    execution_mode = "BATCH"
    family = "DISTANCE_BASED"
    data_dimension = "UNIVARIATE"
    data_types = ["CATEGORICAL"]
    requires_labels = false
    references = [
        "https://en.wikipedia.org/wiki/Total_variation_distance_of_probability_measures",
    ]
    hyperparameters = { threshold = 0.1 }

[[detector]]
    name            = "L-Infinity Distance"
    description     = "Maximum absolute difference between corresponding elements of two distributions."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "DISTANCE_BASED"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = false
    hyperparameters = { threshold = 0.1 }

[[detector]]
    name            = "Histogram Intersection Normalized Complement"
    description     = "Measures dissimilarity between histograms by calculating complement of their intersection."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "DISTANCE_BASED"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    hyperparameters = { bins = 10, threshold = 0.1 }

# Divergence-based Methods
[[detector]]
    name = "Kullback-Leibler Divergence Drift Detection"
    description = "Measures the difference between two probability distributions using KL divergence."
    drift_types = ["DATA_DRIFT"]
    execution_mode = "BATCH"
    family = "DISTANCE_BASED"
    data_dimension = "UNIVARIATE"
    data_types = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    references = [
        "https://en.wikipedia.org/wiki/Kullback%E2%80%93Leibler_divergence",
    ]
    hyperparameters = { threshold = 0.1, bins = 10 }

[[detector]]
    name = "Jensen-Shannon Divergence Drift Detection"
    description = "Symmetrized and smoothed version of KL divergence for measuring distribution difference."
    drift_types = ["DATA_DRIFT"]
    execution_mode = "BATCH"
    family = "DISTANCE_BASED"
    data_dimension = "UNIVARIATE"
    data_types = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    references = [
        "https://en.wikipedia.org/wiki/Jensen%E2%80%93Shannon_divergence",
    ]
    hyperparameters = { threshold = 0.1, bins = 10 }

[[detector]]
    name            = "Population Stability Index"
    description     = "Measures the stability of a distribution over time, based on KL divergence."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "DISTANCE_BASED"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    hyperparameters = { threshold = 0.25, bins = 10 }

# Streaming Methods
[[detector]]
    name = "Drift Detection Method"
    description = "Monitors classification error rate to detect concept drift in streams."
    drift_types = ["CONCEPT_DRIFT"]
    execution_mode = "STREAMING"
    family = "STATISTICAL_PROCESS_CONTROL"
    data_dimension = "UNIVARIATE"
    data_types = ["CONTINUOUS"]
    requires_labels = true
    references = [
        "https://www.cs.waikato.ac.nz/~abifet/PAKDD2011/PAKDD11Tutorial_Handling_Concept_Drift.pdf",
    ]
    hyperparameters = { warning_level = 2.0, drift_level = 3.0 }

[[detector]]
    name            = "Early Drift Detection Method"
    description     = "Extension of DDM that detects gradual concept drift earlier."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_PROCESS_CONTROL"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = true
    references      = ["https://dl.acm.org/doi/10.1145/1143844.1143950"]
    hyperparameters = { warning_level = 0.95, drift_level = 0.9 }

[[detector]]
    name = "Page-Hinkley Test"
    description = "Sequential analysis technique for detecting changes in the average of a Gaussian signal."
    drift_types = ["CONCEPT_DRIFT"]
    execution_mode = "STREAMING"
    family = "CHANGE_DETECTION"
    data_dimension = "UNIVARIATE"
    data_types = ["CONTINUOUS"]
    requires_labels = true
    references = [
        "https://www.cs.waikato.ac.nz/~abifet/PAKDD2011/PAKDD11Tutorial_Handling_Concept_Drift.pdf",
    ]
    hyperparameters = { delta = 0.005, lambda = 50, alpha = 1 }

[[detector]]
    name            = "Adaptive Windowing"
    description     = "Uses adaptive window sizes to detect changes in data streams."
    drift_types     = ["CONCEPT_DRIFT", "DATA_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "WINDOW_BASED"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    hyperparameters = { delta = 0.05 }

[[detector]]
    name            = "Cumulative Sum Control Chart"
    description     = "Sequential analysis technique for monitoring change detection using cumulative sum."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_PROCESS_CONTROL"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = true
    references      = ["https://en.wikipedia.org/wiki/CUSUM"]
    hyperparameters = { threshold = 5.0, drift_threshold = 20.0 }

[[detector]]
    name            = "Geometric Moving Average"
    description     = "Control chart that monitors the geometric weighted moving average of a process."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_PROCESS_CONTROL"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = true
    hyperparameters = { lambda = 0.1, threshold = 3.0 }

[[detector]]
    name            = "Exponential Cumulative Drift Detection"
    description     = "Extends CUSUM with exponential weighting for more adaptive drift detection."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_PROCESS_CONTROL"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = true
    hyperparameters = { lambda = 0.1, threshold = 3.0 }

[[detector]]
    name            = "EWMA Concept Drift Detection Warning"
    description     = "Uses exponentially weighted moving average charts with warning levels for drift detection."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_PROCESS_CONTROL"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = true
    hyperparameters = { lambda = 0.2, warning_threshold = 2.0, drift_threshold = 3.0 }

[[detector]]
    name            = "Hoeffding's Drift Detection Method Test-A"
    description     = "Variation of drift detection method using Hoeffding's inequality (Test A variant)."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_PROCESS_CONTROL"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = true
    hyperparameters = { delta = 0.05 }

[[detector]]
    name            = "Hoeffding's Drift Detection Method Test-W"
    description     = "Variation of drift detection method using Hoeffding's inequality (Test W variant)."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_PROCESS_CONTROL"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = true
    hyperparameters = { delta = 0.05 }

[[detector]]
    name            = "Mc Diarmid Drift Detection Method Test-A"
    description     = "Drift detection using McDiarmid's inequality (Test A variant)."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_PROCESS_CONTROL"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = true
    hyperparameters = { delta = 0.05 }

[[detector]]
    name            = "Mc Diarmid Drift Detection Method Test-E"
    description     = "Drift detection using McDiarmid's inequality (Test E variant)."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_PROCESS_CONTROL"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = true
    hyperparameters = { delta = 0.05 }

[[detector]]
    name            = "Mc Diarmid Drift Detection Method Test-G"
    description     = "Drift detection using McDiarmid's inequality (Test G variant)."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_PROCESS_CONTROL"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = true
    hyperparameters = { delta = 0.05 }

[[detector]]
    name            = "Bayesian Online Change Detection"
    description     = "Bayesian approach to detecting changes in data streams based on posterior probabilities."
    drift_types     = ["CONCEPT_DRIFT", "DATA_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "CHANGE_DETECTION"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = false
    references      = ["https://arxiv.org/abs/0710.3742"]
    hyperparameters = { hazard_function = "constant", alpha = 1.0, beta = 1.0 }

[[detector]]
    name            = "Principal Component Analysis for Concept Drift"
    description     = "Uses PCA to monitor changes in the principal components of a data stream."
    drift_types     = ["CONCEPT_DRIFT", "DATA_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "MACHINE_LEARNING_BASED"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = false
    hyperparameters = { n_components = 2, threshold = 0.05 }

[[detector]]
    name            = "Least-Squares Density Difference"
    description     = "Estimates difference between probability densities using least squares method."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "DENSITY_BASED"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = false
    hyperparameters = { kernel = "rbf", gamma = "auto", lambda_reg = 0.001 }

[[detector]]
    name            = "Log-Likelihood Ratio Test"
    description     = "Compares log-likelihood ratios of data being generated from different distributions."
    drift_types     = ["DATA_DRIFT", "CONCEPT_DRIFT"]
    execution_mode  = "BATCH"
    family          = "STATISTICAL_TEST"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Statistical Test of Equal Proportions Detection"
    description     = "Uses test of equal proportions to detect changes in categorical data streams."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_TEST"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CATEGORICAL"]
    requires_labels = false
    hyperparameters = { threshold = 0.05, window_size = 100 }

[[detector]]
    name            = "Change Detection in Data Streams"
    description     = "Framework for detecting changes in high-dimensional data streams."
    drift_types     = ["DATA_DRIFT", "CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "ENSEMBLE_METHODS"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    hyperparameters = { window_size = 100 }

[[detector]]
    name            = "Reactive Drift Detection Method"
    description     = "Extension of DDM that reacts more quickly to drift by using different warning levels."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_PROCESS_CONTROL"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = true
    hyperparameters = { warning_level = 1.33, drift_level = 2.0 }

[[detector]]
    name            = "Linear Four Rates"
    description     = "Drift detector based on the analysis of four rates from a confusion matrix over time."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "STATISTICAL_PROCESS_CONTROL"
    data_dimension  = "UNIVARIATE"
    data_types      = ["CATEGORICAL"]
    requires_labels = true
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Margin Density Drift Detection Method"
    description     = "Detects drift by monitoring density of samples in the margin of a classifier."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "MACHINE_LEARNING_BASED"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS"]
    requires_labels = true
    hyperparameters = { margin_width = 0.1, warn_threshold = 0.75, drift_threshold = 0.9 }

[[detector]]
    name            = "Online Accuracy Updated Ensemble"
    description     = "Ensemble method that updates weights based on accuracy for handling concept drift."
    drift_types     = ["CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "ENSEMBLE_METHODS"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = true
    hyperparameters = { n_estimators = 10, window_size = 100 }

[[detector]]
    name            = "Unsupervised Drift Detector"
    description     = "Detects drift in an unsupervised manner without requiring labels."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "MACHINE_LEARNING_BASED"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Mixed-Type Tabular Data"
    description     = "Specialized detector for handling both continuous and categorical features in tabular data."
    drift_types     = ["DATA_DRIFT"]
    execution_mode  = "BATCH"
    family          = "MACHINE_LEARNING_BASED"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    hyperparameters = { threshold = 0.05 }

[[detector]]
    name            = "Periodic Trigger"
    description     = "Simple drift detector that triggers at fixed intervals, used as a baseline."
    drift_types     = ["DATA_DRIFT", "CONCEPT_DRIFT"]
    execution_mode  = "STREAMING"
    family          = "WINDOW_BASED"
    data_dimension  = "MULTIVARIATE"
    data_types      = ["CONTINUOUS", "CATEGORICAL"]
    requires_labels = false
    hyperparameters = { period = 1000 }
