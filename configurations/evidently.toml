# Evidently Drift Detection Benchmark Configuration
[metadata]
    name        = "Evidently Adapter Benchmark"
    description = "Comprehensive benchmark evaluating Evidently-based drift detection methods across statistical tests and distance-based approaches"
    author      = "Drift Benchmark Team"
    version     = "1.0.0"

[settings]
    seed                 = 42
    n_runs               = 3
    cross_validation     = true
    cv_folds             = 3
    timeout_per_detector = 300

[data]
    # Synthetic dataset with sudden drift for testing statistical methods
    [[data.datasets]]
        name           = "synthetic_gaussian_sudden"
        type           = "SYNTHETIC"
        n_samples      = 1000
        n_features     = 4
        drift_pattern  = "SUDDEN"
        drift_position = 0.5
        noise          = 0.1

    # Synthetic dataset with gradual drift for testing robustness
    [[data.datasets]]
        name           = "synthetic_mixed_gradual"
        type           = "SYNTHETIC"
        n_samples      = 1500
        n_features     = 3
        drift_pattern  = "GRADUAL"
        drift_position = 0.4
        noise          = 0.05

[detectors]
    # Statistical Tests - Univariate Continuous
    [[detectors.algorithms]]
        name              = "Kolmogorov-Smirnov Test"
        adapter           = "evidently_adapter"
        method_id         = "kolmogorov_smirnov"
        implementation_id = "ks_evidently"
        parameters        = { threshold = 0.05 }

    [[detectors.algorithms]]
        name              = "Anderson-Darling Test"
        adapter           = "evidently_adapter"
        method_id         = "anderson_darling"
        implementation_id = "ad_evidently"
        parameters        = { threshold = 0.05 }

    [[detectors.algorithms]]
        name              = "Mann-Whitney U-Test"
        adapter           = "evidently_adapter"
        method_id         = "mann_whitney"
        implementation_id = "mw_evidently"
        parameters        = { threshold = 0.05 }

    # Distance-based Methods
    [[detectors.algorithms]]
        name              = "Wasserstein Distance"
        adapter           = "evidently_adapter"
        method_id         = "wasserstein_distance"
        implementation_id = "wasserstein_evidently"
        parameters        = { threshold = 0.1 }

    [[detectors.algorithms]]
        name              = "Jensen-Shannon Divergence"
        adapter           = "evidently_adapter"
        method_id         = "jensen_shannon_divergence"
        implementation_id = "js_evidently"
        parameters        = { threshold = 0.1 }

    [[detectors.algorithms]]
        name              = "Kullback-Leibler Divergence"
        adapter           = "evidently_adapter"
        method_id         = "kullback_leibler_divergence"
        implementation_id = "kl_evidently"
        parameters        = { threshold = 0.1 }

    # Statistical Tests - Categorical
    [[detectors.algorithms]]
        name              = "Chi-square Test"
        adapter           = "evidently_adapter"
        method_id         = "chi_square"
        implementation_id = "chi_evidently"
        parameters        = { threshold = 0.05 }

    # Multivariate Drift Detection
    [[detectors.algorithms]]
        name              = "All Features Value Drift"
        adapter           = "evidently_adapter"
        method_id         = "all_features_drift"
        implementation_id = "all_features_evidently"
        parameters        = { threshold = 0.05 }

[evaluation]
    cross_validation   = true
    cv_folds           = 5
    significance_tests = true
    confidence_level   = 0.95

    [[evaluation.metrics]]
        name    = "ACCURACY"
        enabled = true
        weight  = 1.0

    [[evaluation.metrics]]
        name    = "PRECISION"
        enabled = true
        weight  = 1.0

    [[evaluation.metrics]]
        name    = "RECALL"
        enabled = true
        weight  = 1.0

    [[evaluation.metrics]]
        name    = "F1_SCORE"
        enabled = true
        weight  = 2.0

[output]
    save_results  = true
    visualization = true
    export_format = ["CSV", "JSON", "EXCEL"]
    log_level     = "INFO"
