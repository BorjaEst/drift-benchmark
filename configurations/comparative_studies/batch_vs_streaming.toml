# Batch vs Streaming Execution Mode Comparison
# Compare batch and online/streaming approaches on identical scenarios
# Focus on execution mode performance and accuracy trade-offs

# Scenarios suitable for both batch and streaming analysis
[[scenarios]]
    id = "synthetic/concept_drift_gradual"

[[scenarios]]
    id = "synthetic/covariate_drift_strong"

[[scenarios]]
    id = "custom/sensor_data_drift"

[[scenarios]]
    id = "custom/customer_churn"

# === KOLMOGOROV-SMIRNOV: BATCH VS STREAMING ===
# Batch implementations
[[detectors]]
    method_id  = "kolmogorov_smirnov"
    variant_id = "ks_batch"
    library_id = "evidently"
    threshold  = 0.05

[[detectors]]
    method_id  = "kolmogorov_smirnov"
    variant_id = "ks_batch"
    library_id = "alibi-detect"
    threshold  = 0.05

# Streaming/Online implementations
[[detectors]]
    method_id   = "kolmogorov_smirnov"
    variant_id  = "ks_online"
    library_id  = "alibi-detect"
    threshold   = 0.05
    window_size = 100

# River windowed KS approach
[[detectors]]
    method_id   = "kswin"
    variant_id  = "kswin_standard"
    library_id  = "river"
    alpha       = 0.005
    window_size = 100

# === CRAMER-VON MISES: BATCH VS STREAMING ===
[[detectors]]
    method_id  = "cramer_von_mises"
    variant_id = "cvm_batch"
    library_id = "evidently"
    threshold  = 0.05

[[detectors]]
    method_id  = "cramer_von_mises"
    variant_id = "cvm_batch"
    library_id = "alibi-detect"
    threshold  = 0.05

[[detectors]]
    method_id   = "cramer_von_mises"
    variant_id  = "cvm_online"
    library_id  = "alibi-detect"
    threshold   = 0.05
    window_size = 100

# === STATISTICAL BATCH METHODS ===
[[detectors]]
    method_id  = "anderson_darling"
    variant_id = "ad_batch"
    library_id = "evidently"
    threshold  = 0.05

[[detectors]]
    method_id  = "mann_whitney"
    variant_id = "mw_batch"
    library_id = "evidently"
    threshold  = 0.05

[[detectors]]
    method_id  = "t_test"
    variant_id = "ttest_batch"
    library_id = "evidently"
    threshold  = 0.05

# === DISTANCE-BASED BATCH METHODS ===
[[detectors]]
    method_id  = "jensen_shannon_divergence"
    variant_id = "js_evidently"
    library_id = "evidently"
    threshold  = 0.1

[[detectors]]
    method_id  = "kullback_leibler_divergence"
    variant_id = "kl_evidently"
    library_id = "evidently"
    threshold  = 0.1

[[detectors]]
    method_id  = "wasserstein_distance"
    variant_id = "wasserstein_batch"
    library_id = "evidently"
    threshold  = 0.05

# === MULTIVARIATE BATCH ANALYSIS ===
[[detectors]]
    method_id  = "all_features_drift"
    variant_id = "all_features_evidently"
    library_id = "evidently"
    threshold  = 0.05
    stattest   = "ks"

# === RIVER STREAMING METHODS ===
[[detectors]]
    method_id  = "adaptive_windowing"
    variant_id = "adwin_standard"
    library_id = "river"
    delta      = 0.002

[[detectors]]
    method_id     = "drift_detection_method"
    variant_id    = "ddm_standard"
    library_id    = "river"
    warning_level = 2.0
    drift_level   = 3.0

[[detectors]]
    method_id     = "early_drift_detection_method"
    variant_id    = "eddm_standard"
    library_id    = "river"
    warning_level = 0.95
    drift_level   = 0.90

[[detectors]]
    method_id  = "page_hinkley"
    variant_id = "ph_standard"
    library_id = "river"
    delta      = 0.005
    lambda     = 50.0
    alpha      = 0.9999

[[detectors]]
    method_id  = "hoeffding_drift_detection_test_a"
    variant_id = "hddm_a_standard"
    library_id = "river"
    delta      = 0.002

[[detectors]]
    method_id  = "hoeffding_drift_detection_test_w"
    variant_id = "hddm_w_standard"
    library_id = "river"
    delta      = 0.002

# === ADDITIONAL RIVER METHODS ===
[[detectors]]
    method_id       = "cusum"
    variant_id      = "cusum_standard"
    library_id      = "river"
    threshold       = 0.5
    drift_threshold = 1.0

[[detectors]]
    method_id  = "geometric_moving_average"
    variant_id = "gma_standard"
    library_id = "river"
    lambda     = 0.1
    threshold  = 0.5
